name: Build

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'releases/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

# Allow to stop obsolete workflows
concurrency:
  group: ci-buildtrain-${{ github.ref }}-1
  cancel-in-progress: true

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_build_arch: [ linux/arm64 , linux/amd64 ]
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      - name: set lower case repository name
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{env.REPOSITORY_LC}}

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU (arm64)
        if: runner.arch != 'arm64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up QEMU (x64)
        if: runner.arch != 'x64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.docker_build_arch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=ghcr.io/${{env.REPOSITORY_LC}},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: set lower case repository name
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'
      - name: Download digests
        if: github.event_name != 'pull_request'
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v4
        with:
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge,branch=main,prefix=releases-
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          images: ghcr.io/${{env.REPOSITORY_LC}}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{env.REPOSITORY_LC}}@sha256:%s ' *)
      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ghcr.io/${{env.REPOSITORY_LC}}:${{ steps.meta.outputs.version }}
