name: Build

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Clean build without cache'
        default: false
        type: boolean
  push:
    branches:
      - 'main'
      - 'releases/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

# Allow stopping obsolete workflows
concurrency:
  group: ci-buildtrain-${{ github.ref }}-1
  cancel-in-progress: true

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_build_arch: [ linux/arm64 , linux/amd64 ]
    steps:
      - name: Prepare
        env:
          REPOSITORY: '${{ github.repository }}'
        run: |
          build_arch=${{ matrix.docker_build_arch }}
          echo "BUILD_ARCH=${build_arch//\//-}" >> ${GITHUB_ENV}

          echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ env.REPOSITORY_LC }}

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU (arm64)
        if: runner.arch != 'arm64' && matrix.docker_build_arch == 'linux/arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up QEMU (x64)
        if: runner.arch != 'x64' && matrix.docker_build_arch == 'linux/amd64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: ${{ matrix.docker_build_arch }}
          no-cache: ${{ inputs.clean_build == true }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=ghcr.io/${{ env.REPOSITORY_LC }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.BUILD_ARCH }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Prepare
        env:
          REPOSITORY: '${{ github.repository }}'
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}" >> ${GITHUB_ENV}
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # generate Docker tags based on the following events/attributes
          tags: |
            type=edge,branch=main,prefix=releases-
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          images: ghcr.io/${{ env.REPOSITORY_LC }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ env.REPOSITORY_LC }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.REPOSITORY_LC }}:${{ steps.meta.outputs.version }}
