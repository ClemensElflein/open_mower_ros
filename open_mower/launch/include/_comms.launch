<!--
    This launch file starts all communication needed in order to control and localize the bot.
    I.e. the raw data comms to the Low Level Board, the GPS, etc.
-->
<launch>
    <!-- TODO: Add parameter for simulation -->

    <!-- depends on a hardware implementation, comms node implementation can be specified e.g. rosserial for mowgli -->
    <arg name="comms_node" default="openmower"/>

    <group if="$(eval comms_node == 'openmower')">
        <node pkg="mower_comms" type="mower_comms" name="mower_comms">
            <param name="ll_serial_port" value="/dev/$(env OM_LL_SERIAL_PORT)"/>
            <param name="left_esc_serial_port" value="/dev/$(env OM_LEFT_SERIAL_PORT)"/>
            <param name="right_esc_serial_port" value="/dev/$(env OM_RIGHT_SERIAL_PORT)"/>
            <param name="mow_esc_serial_port" value="/dev/$(env OM_MOW_SERIAL_PORT)"/>
        </node>
    </group>
    <group if="$(eval comms_node == 'rosserial')">
        <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
            <param name="port" value="/dev/$(env OM_ROSSERIAL_SERIAL_PORT)"/>
            <param name="baud" value="115200"/>
        </node>
    </group>
    
    <include file="$(find open_mower)/launch/include/_gps.launch">
        <arg name="serial_port" value="$(env OM_GPS_SERIAL_PORT)"/>
        <arg name="ntrip_ip" value="$(env OM_NTRIP_HOSTNAME)"/>
        <arg name="ntrip_port" value="$(env OM_NTRIP_PORT)"/>
        <arg name="ntrip_endpoint" value="$(env OM_NTRIP_ENDPOINT)"/>
        <arg name="ntrip_user" value="$(env OM_NTRIP_USER)"/>
        <arg name="ntrip_password" value="$(env OM_NTRIP_PASSWORD)"/>
    </include>


</launch>
